# Default values for llama-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
rawDeploymentMode: true

image:
  repository: llamastack/distribution-starter
  pullPolicy: IfNotPresent
  # Use Chart.AppVersion for image tag, so no need to set it here
  # tag: "0.2.8"

imagePullSecrets: []
nameOverride: "llamastack"
fullnameOverride: "llamastack"

serviceAccount:
  create: false

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

progressDeadlineSeconds: 3600

strategy:
  type: Recreate

service:
  type: ClusterIP
  port: 8321

args:
  - --config
  - /app-config/config.yaml
env:
  - name: VLLM_MAX_TOKENS
    value: "4096"
  - name: VLLM_API_TOKEN
    value: fake
  - name: OTEL_ENDPOINT
    value: http://otel-collector-collector.observability-hub.svc.cluster.local:4318/v1/traces
  - name: POSTGRES_USER
    valueFrom:
      secretKeyRef:
        key: user
        name: pgvector
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        key: password
        name: pgvector
  - name: POSTGRES_HOST
    valueFrom:
      secretKeyRef:
        key: host
        name: pgvector
  - name: POSTGRES_PORT
    valueFrom:
      secretKeyRef:
        key: port
        name: pgvector
  - name: PGVECTOR_DBNAME
    valueFrom:
      secretKeyRef:
        key: dbname
        name: pgvector

resources: {}

autoscaling:
  enabled: false

# Additional volumes on the output Deployment definition.
volumes:
  - configMap:
      defaultMode: 420
      name: run-config
    name: run-config-volume
  - name: dot-llama
    persistentVolumeClaim:
      claimName: llama-stack-data
  - emptyDir: {}
    name: cache
  - configMap:
      name: dsp-trusted-ca-dspa
    name: dsp-trusted-ca-dspa-volume

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - mountPath: /app-config
    name: run-config-volume
  - mountPath: /.llama
    name: dot-llama
  - mountPath: /.cache
    name: cache
  - name: dsp-trusted-ca-dspa-volume
    mountPath: /dsp-trusted-ca-dspa
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

secrets: {}
mcp-servers: {}
models:
  llama-3-2-3b-instruct:
    id: meta-llama/Llama-3.2-3B-Instruct
    enabled: false
  llama-guard-3-8b:
    id: meta-llama/Llama-Guard-3-8B
    enabled: false
    registerShield: true
  llama-3-2-1b-instruct:
    id: meta-llama/Llama-3.2-1B-Instruct
    enabled: false
  llama-3-1-8b-instruct:
    id: meta-llama/Llama-3.1-8B-Instruct
    enabled: false
  llama-guard-3-1b:
    id: meta-llama/Llama-Guard-3-1B
    enabled: false
    registerShield: true
  llama-3-3-70b-instruct:
    id: meta-llama/Llama-3.3-70B-Instruct
    enabled: false
  llama-3-2-1b-instruct-quantized:
    id: RedHatAI/Llama-3.2-1B-Instruct-quantized.w8a8
    enabled: false

auth: {}
# auth:
#   endpoint: "https://auth.example.com/validate"
#   access_policy:
#   - permit:
#       actions: [create]
#       resource: session::*
#     description: all users have create access to sessions
#   - permit:
#       actions: [read]
#       resource: agent::*
#     description: all users have read access to agents
#   - permit:
#       actions: [read]
#       resource: tool_group::*
#     description: all users have read access to tool_groups
#   - permit:
#       actions: [read]
#       resource: model::*
#     description: all users have read access to models
#   - permit:
#       actions: [read]
#       resource: vector_db::*
#     description: all users have read access to vector_dbs
#   - permit:
#       actions: [create, update, delete]
#       resource: vector_db::*
#     when: user with admin in roles
#     description: users with the admin role can create, update or delete vector_dbs
#   - forbid:
#       actions: [create, update, delete]
#     unless: user with admin in roles
#     description: only users with the admin role can create, update or delete resources
#   - permit:
#       actions: [read, update, delete]
#     when: user is owner
#     description: users can read, update and delete resources they own
